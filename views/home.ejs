<style>
  /* Upload Form Styling */
  .upload-form {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 40px auto;
    padding: 0 20px;
  }

  .upload-card {
    width: 100%;
    max-width: 500px;
    background: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 16px;
    padding: 30px 25px;
  }

  .upload-title {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    margin-bottom: 20px;
    display: block;
  }

  .file-row {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 25px;
  }

  .visually-hidden {
    display: none;
  }

  .file-name {
    font-size: 14px;
    color: #666;
    font-weight: 400;
  }

  /* Buttons */
  .btn {
    font-family: "Poppins", sans-serif;
    font-size: 14px;
    font-weight: 500;
    padding: 10px 18px;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }

  .choose-btn {
    background: #f1f1f1;
    color: #333;
  }

  .choose-btn:hover {
    background: #e0e0e0;
  }

  .upload-btn {
    background: #fc2779;
    color: #fff;
    width: 100%;
    text-align: center;
  }

  .upload-btn:hover {
    background: #e0206b;
  }

  /* Progress bar */
  .progress-container {
    margin-top: 20px;
    width: 100%;
    background: #f1f1f1;
    border-radius: 8px;
    overflow: hidden;
    display: none;
  }

  .progress-bar {
    height: 12px;
    width: 0%;
    background: linear-gradient(90deg, #fc2779, #ff5c9a);
    transition: width 0.3s ease;
  }

  .progress-text {
    text-align: right;
    font-size: 12px;
    color: #666;
    margin-top: 6px;
    display: none;
  }

  /* File URL display */
  .file-link {
    margin-top: 15px;
    font-size: 14px;
    display: none;
    align-items: center;
    gap: 10px;
    flex: 1;
    font-size: 14px;
    border: 1px solid #ccc;
    border-radius: 6px;
    outline: none;
    min-width: 0;
  }

  .file-url-input {
    flex: 1;
    padding: 8px 10px;
    font-size: 14px;
    border: none;
    border-right: 1px solid #ccc;
    border-radius: 6px;
    outline: none;
    min-width: 0;
  }

  .copy-btn {
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 6px;
    border-radius: 6px;
    transition: background 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .copy-btn:hover {
    background: #f1f1f1;
  }

  .copy-btn svg {
    width: 20px;
    height: 20px;
    stroke: #333;
  }
</style>

<form id="uploadForm" class="upload-form" novalidate>
  <fieldset class="upload-card">
    <legend class="upload-title">Upload Your File</legend>

    <!-- File Input -->
    <div class="file-row">
      <input type="file" id="file" required class="visually-hidden" />
      <label for="file" class="btn choose-btn">Choose File</label>
      <span id="file-chosen" class="file-name">No file chosen</span>
    </div>

    <!-- Submit -->
    <button type="submit" class="btn upload-btn">Upload File</button>

    <!-- Progress -->
    <div class="progress-container">
      <div class="progress-bar" id="progress-bar"></div>
    </div>
    <div class="progress-text" id="progress-text">0%</div>

    <!-- File URL -->
    <div class="file-link" id="file-link">
      <input type="text" id="file-url" class="file-url-input" readonly />
      <button type="button" id="copy-btn" class="copy-btn" title="Copy link">
        <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg"><path d='M20.829 12.861c.171-.413.171-.938.171-1.986s0-1.573-.171-1.986a2.25 2.25 0 0 0-1.218-1.218c-.413-.171-.938-.171-1.986-.171H11.1c-1.26 0-1.89 0-2.371.245a2.25 2.25 0 0 0-.984.984C7.5 9.209 7.5 9.839 7.5 11.1v6.525c0 1.048 0 1.573.171 1.986.229.551.667.99 1.218 1.218.413.171.938.171 1.986.171s1.573 0 1.986-.171m7.968-7.968a2.25 2.25 0 0 1-1.218 1.218c-.413.171-.938.171-1.986.171s-1.573 0-1.986.171a2.25 2.25 0 0 0-1.218 1.218c-.171.413-.171.938-.171 1.986s0 1.573-.171 1.986a2.25 2.25 0 0 1-1.218 1.218m7.968-7.968a11.68 11.68 0 0 1-7.75 7.9l-.218.068M16.5 7.5v-.9c0-1.26 0-1.89-.245-2.371a2.25 2.25 0 0 0-.983-.984C14.79 3 14.16 3 12.9 3H6.6c-1.26 0-1.89 0-2.371.245a2.25 2.25 0 0 0-.984.984C3 4.709 3 5.339 3 6.6v6.3c0 1.26 0 1.89.245 2.371.216.424.56.768.984.984.48.245 1.111.245 2.372.245H7.5'/></svg>
      </button>
    </div>
  </fieldset>
</form>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const fileInput = document.getElementById("file");
  const fileName = document.getElementById("file-chosen");
  const form = document.getElementById("uploadForm");
  const progressBar = document.getElementById("progress-bar");
  const progressText = document.getElementById("progress-text");
  const progressContainer = document.querySelector(".progress-container");
  const fileLinkBox = document.getElementById("file-link");
  const fileUrlInput = document.getElementById("file-url");
  const copyBtn = document.getElementById("copy-btn");

  fileInput.addEventListener("change", () => {
    fileName.textContent = fileInput.files.length > 0 ? fileInput.files[0].name : "No file chosen";
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    if (fileInput.files.length === 0) {
      alert("Please choose a file first.");
      return;
    }

    progressContainer.style.display = "block";
    progressText.style.display = "block";
    progressBar.style.width = "0%";
    progressText.textContent = "0%";

    const file = fileInput.files[0];
    const chunkSize = 5 * 1024 * 1024; // 5MB
    const totalChunks = Math.ceil(file.size / chunkSize);

    try {
      for (let i = 0; i < totalChunks; i++) {
        const chunk = file.slice(i * chunkSize, (i + 1) * chunkSize);
        const formData = new FormData();
        formData.append("chunk", chunk);
        formData.append("fileName", file.name);
        formData.append("chunkIndex", i);
        formData.append("totalChunks", totalChunks);

        const response = await fetch("/upload-chunk", { method: "POST", body: formData });

        if (!response.ok) throw new Error(`Chunk ${i} upload failed: ${response.statusText}`);

        const percent = Math.round(((i + 1) / totalChunks) * 100);
        progressBar.style.width = `${percent}%`;
        progressText.textContent = `${percent}%`;
      }

      const mergeRes = await fetch("/merge-chunks", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ fileName: file.name, totalChunks }),
      });

      if (!mergeRes.ok) throw new Error(`Merge failed: ${mergeRes.statusText}`);

      const result = await mergeRes.json();
      if (result.file_url) {
        fileUrlInput.value = result.file_url;
        fileLinkBox.style.display = "flex";
        progressText.textContent = "Upload complete!";
        progressBar.style.background = "#4caf50";
      }
    } catch (error) {
      console.error("Upload error:", error);
      progressText.textContent = "Upload failed!";
      progressBar.style.background = "#ff4444";
    }
  });

  copyBtn.addEventListener("click", () => {
    fileUrlInput.select();
    fileUrlInput.setSelectionRange(0, 99999); // mobile support
    navigator.clipboard.writeText(fileUrlInput.value).then(() => {
      copyBtn.style.background = "#d4edda"; // success feedback
      setTimeout(() => (copyBtn.style.background = "transparent"), 1000);
    });
  });
});
</script>