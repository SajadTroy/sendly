<style>
  /* Copy Card */
  .copy-card {
    width: 100%;
    max-width: 600px;
    margin: 40px auto;
    padding: 25px;
    background: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 16px;
  }

  .copy-title {
    display: block;
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 15px;
    color: #333;
  }

  .copy-row {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .copy-input {
    flex: 1;
    padding: 12px 15px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-family: "Poppins", sans-serif;
    font-size: 14px;
    color: #333;
    background: #f9f9f9;
  }

  .copy-input:focus {
    outline: none;
    border-color: #fc2779;
    box-shadow: 0 0 0 2px rgba(252, 39, 121, 0.15);
  }

  .copy-btn {
    background: #fc2779;
    color: #fff;
    font-weight: 500;
    padding: 12px 20px;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    transition: background 0.2s ease-in-out;
  }

  .copy-btn:hover {
    background: #e0206b;
  }

  .status {
    margin-top: 12px;
    font-size: 14px;
    font-weight: 400;
    color: #666;
  }
</style>

<div class="copy-card">
  <label for="copyInput" class="copy-title">Your File Link</label>

  <div class="copy-row">
    <input type="text" id="copyInput" value="<%- fileUrl %>" readonly class="copy-input"
      aria-describedby="copyStatus" />

    <button type="button" class="btn copy-btn" id="copyBtn" aria-controls="copyInput"
      aria-label="Copy link to clipboard">
      Copy
    </button>
  </div>

  <p id="copyStatus" class="status" role="status" aria-live="polite"></p>
</div>

<script>
  (function () {
    const btn = document.getElementById('copyBtn');
    const input = document.getElementById('copyInput');
    const status = document.getElementById('copyStatus');

    function setStatus(msg, ok = true) {
      status.textContent = msg;
      status.style.color = ok ? '#065f46' : '#b91c1c';
    }

    async function copyWithClipboardAPI(text) {
      await navigator.clipboard.writeText(text);
    }

    function copyWithExecCommand(el) {
      // Select the text and use deprecated-but-supported fallback
      const prevReadOnly = el.readOnly;
      el.readOnly = false; // some browsers require non-readonly for select + execCommand
      el.select();
      el.setSelectionRange(0, el.value.length);
      const success = document.execCommand && document.execCommand('copy');
      el.blur();
      el.readOnly = prevReadOnly;
      return success;
    }

    btn.addEventListener('click', async () => {
      // Ensure document is focused for some browsers
      window.focus();
      const text = input.value;

      try {
        if (navigator.clipboard && navigator.clipboard.writeText) {
          await copyWithClipboardAPI(text);
          setStatus('Copied link to clipboard.');
        } else {
          const ok = copyWithExecCommand(input);
          if (ok) setStatus('Copied link to clipboard.');
          else setStatus('Copy not supported in this context.', false);
        }
      } catch (err) {
        // Fallback attempt if Clipboard API fails (e.g., NotAllowedError)
        try {
          const ok = copyWithExecCommand(input);
          if (ok) setStatus('Copied link to clipboard.');
          else setStatus('Copy blocked by browser settings.', false);
        } catch {
          setStatus('Copy failed. Long-press and select Copy.', false);
        }
      }
    });

    // Accessibility: keyboard shortcut on input (Ctrl/Cmd+C)
    input.addEventListener('keydown', async (e) => {
      const isMac = navigator.platform.toUpperCase().includes('MAC');
      const modifier = isMac ? e.metaKey : e.ctrlKey;
      if (modifier && e.key.toLowerCase() === 'c') {
        try {
          if (navigator.clipboard && navigator.clipboard.writeText) {
            await navigator.clipboard.writeText(input.value);
            setStatus('Copied link to clipboard.');
          } else {
            const ok = copyWithExecCommand(input);
            if (ok) setStatus('Copied link to clipboard.');
          }
        } catch { }
      }
    });
  })();
</script>